{"code":"!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=1)}([function(t,e){t.exports=function(t){return`${t[0]}, ${t[1]}`}},function(t,e,n){const o=n(2),r=n(3),u=n(4),c=document.getElementById(\"life\").getContext(\"2d\");let f=u(10,10),i=r(f,10,10);requestAnimationFrame(function t(){f=o(f,i),i=r(f,10,10),c.clearRect(0,0,300,300),c.fillStyle=\"#101010\";for(let t=0;t<f.length;t++)c.fillRect(t[0],t[1],1,1);requestAnimationFrame(t)})},function(t,e,n){const o=n(0);function r(t,e){return e.push(t)}t.exports=function(t,e){const n=[];t.slice().forEach(n=>{const r=o(n);e.has(r)&&(2!==e.get(r).count&&3!==e.get(r).count||function(t,e){e.push(t)}(n,t),e.delete(r))});for(let t of e)3===t[1].count&&r(t[1].coords,n);return e.clear(),n}},function(t,e,n){const o=n(0);function r(t,e){const n=o(t);e.has(n)?e.get(n).count++:e.set(n,{count:1,coords:t})}t.exports=function(t,e,n){const o=new Map;return t.forEach(t=>{const u=t[0],c=t[1];u-1>=0&&c-1>=0&&r([u-1,c-1],o),u+1<e&&c+1<n&&r([u+1,c+1],o),u-1>=0&&c+1<n&&r([u-1,c+1],o),u+1<e&&c-1>=0&&r([u+1,c-1],o),c-1>=0&&r([u,c-1],o),u-1>=0&&r([u-1,c],o),u+1<e&&r([u+1,c],o),c+1<n&&r([u,c+1],o)}),o}},function(t,e){t.exports=function(t,e){const n=[];for(let o=0;o<t;o++)for(let t=0;t<e;t++)Math.round(Math.random())&&n.push([o,t]);return n}}]);","extractedComments":[]}