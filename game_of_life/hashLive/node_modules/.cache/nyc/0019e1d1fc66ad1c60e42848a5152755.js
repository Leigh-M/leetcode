var cov_28va09axxs=function(){var path="/home/leigh/node/leetcode/Game of Life/hashLive/src/buildLiveHash.js",hash="a58da918df5d1651a24983b5516f5701101156d6",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/leigh/node/leetcode/Game of Life/hashLive/src/buildLiveHash.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:36}},"1":{start:{line:4,column:19},end:{line:4,column:34}},"2":{start:{line:5,column:2},end:{line:5,column:33}},"3":{start:{line:9,column:15},end:{line:9,column:24}},"4":{start:{line:10,column:2},end:{line:13,column:5}},"5":{start:{line:11,column:14},end:{line:11,column:21}},"6":{start:{line:11,column:27},end:{line:11,column:34}},"7":{start:{line:12,column:4},end:{line:12,column:28}},"8":{start:{line:14,column:2},end:{line:14,column:14}},"9":{start:{line:17,column:0},end:{line:17,column:31}}},fnMap:{"0":{name:"buildHash",decl:{start:{line:3,column:9},end:{line:3,column:18}},loc:{start:{line:3,column:33},end:{line:6,column:1}},line:3},"1":{name:"buildLiveHash",decl:{start:{line:8,column:9},end:{line:8,column:22}},loc:{start:{line:8,column:34},end:{line:15,column:1}},line:8},"2":{name:"(anonymous_2)",decl:{start:{line:10,column:20},end:{line:10,column:21}},loc:{start:{line:10,column:30},end:{line:13,column:3}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const hashKey=(cov_28va09axxs.s[0]++,require('./hashKey'));function buildHash(coords,live){cov_28va09axxs.f[0]++;const hashCode=(cov_28va09axxs.s[1]++,hashKey(coords));cov_28va09axxs.s[2]++;live.set(hashCode,{coords});}function buildLiveHash(liveCells){cov_28va09axxs.f[1]++;const live=(cov_28va09axxs.s[3]++,new Map());cov_28va09axxs.s[4]++;liveCells.forEach(item=>{cov_28va09axxs.f[2]++;const x=(cov_28va09axxs.s[5]++,item[0]),y=(cov_28va09axxs.s[6]++,item[1]);cov_28va09axxs.s[7]++;buildHash([x,y],live);});cov_28va09axxs.s[8]++;return live;}cov_28va09axxs.s[9]++;module.exports=buildLiveHash;